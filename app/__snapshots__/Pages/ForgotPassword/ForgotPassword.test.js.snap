// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ForgotPassword/> should be defined 1`] = `
<PageHoc>
  <EmotionCssPropInternal
    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
    css={
      Object {
        "map": undefined,
        "name": "d25aow",
        "next": undefined,
        "styles": "
  max-width: 350px;
  .paper {
    margin-top: 30px,
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 40px 40px;
  }
  .form-title {
    font-size: 35px;
    letter-spacing: -2px;
    margin: 10px 0px;
  }
",
      }
    }
  >
    <WithStyles(Paper)
      className="paper"
      elevation={1}
    >
      <p
        className="form-title"
      >
        Forgot Password
      </p>
      <Formik
        enableReinitialize={false}
        initialValues={
          Object {
            "email": "",
          }
        }
        isInitialValid={false}
        onReset={[Function]}
        onSubmit={[Function]}
        render={[Function]}
        validateOnBlur={true}
        validateOnChange={true}
        validationSchema={
          ObjectSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_defaultDefault": [Function],
            "_deps": Array [],
            "_excludedEdges": Array [],
            "_exclusive": Object {},
            "_mutate": undefined,
            "_nodes": Array [
              "email",
            ],
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "object",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "fields": Object {
              "email": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {
                  "required": true,
                  "undefined": false,
                },
                "_mutate": undefined,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [
                  [Function],
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                ],
              },
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
          }
        }
      />
    </WithStyles(Paper)>
  </EmotionCssPropInternal>
</PageHoc>
`;
