version: '3'
services:
  app:
    tty: true
    container_name: apitest
    build:
      context: 'app'
      dockerfile: 'Dockerfile'
    environment:
      - PORT=4000
    ports:
      - 4000:4000
    networks:
      - openelections
#    volumes:
#      - ./app/src:/app/src
#      - ./app/yarn.lock:/app/yarn.lock
  api:
    container_name: apitest
    tty: true # Enables debugging capabilities when attached to this container.
    user: root
    build:
      context: 'api'
      dockerfile: 'Dockerfile.development'
    # volumes:
    #   - ./api:/app
    command: ["./wait-for-it.sh", "testdb:5433", "--", "npm", "run", "seedandrun"]
    environment:
      - PORT=3000
      - NODE_ENV=test
      - SECRET_KEY=bananas
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=open_elections_test
      - DB_HOST=testdb
      - SKIP_DB_WAIT=0
      - SKIP_DB_MIGRATION=0
      - SKIP_NPM_INSTALL=0
      - SKIP_BOWER_INSTALL=0
      - DB_PORT=5432
      - APP_ENV=test
    depends_on:
      - testdb
      - datatest
    ports:
      - 3000:3000
    networks:
      - openelections
  testdb:
    container_name: testdb
    image: mdillon/postgis
    ports: ['5434:5432']
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=open_elections_test
    networks:
      - openelections
  datatest:
    build:
      context: ./datascience
    command: ["sh", "/app/openelections/api/start.sh"]
    depends_on:
      - testdb
    ports:
      - 8080:80
#    volumes:
#      - ./datascience:/app
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=open_elections_test
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=testdb
    networks:
      - openelections
networks:
  openelections:


