# https://swagger.io/docs/specification/about/
components:
  # Reusable schemas (data models)
  schemas:
    Activity:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        notes:
          type: string
        activityId:
          type: integer
        activityType:
          type: string
        campaignId:
          type: integer
    Campaign:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        governmentId:
          type: integer
        officeSought:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    NewUser:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: integer
        role:
          type: string
        type:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    ContributionStatusSummary:
      type: object
      properties:
        status:
          type: string
          enum: [Draft,Submitted,Processed]
        matchAmount:
          type: integer
        amount:
          type: integer
    ExpenditureStatusSummary:
      type: object
      properties:
        status:
          type: string
          enum: [draft,submitted,processed, in_compliance, out_of_compliance]
        amount:
          type: integer
    StatusSummary:
      type: object
      properties:
        contributions:
          type: array
          items:
            $ref: '#/components/schemas/ContributionStatusSummary'
        expenditures:
          type: array
          items:
            $ref: '#/components/schemas/ExpenditureStatusSummary'
    Contribution:
      type: object
      properties:
        id:
          type: integer
        governmentId:
          type: integer
        campaignId:
          type: integer
        address1:
          type: string
        address2:
          type: string
        amount:
          type: integer
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        contributorType:
          type: string
          enum: [individual,business,family,labor,political_committee,political_party,unregistered,other]
        inKindType:
          type: string
          enum: [wages,broadcast_advertising,fundraising_event_expenses,general_operating_expenses,printing,management,print_advertising,other_advertising,petition_Circulators,postage,preparation_of_advertising,surveys_and_polls,travel_expenses,utilities]
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleInitial:
          type: string
        matchAmount:
          type: integer
        name:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        title:
          type: string
        status:
          type: string
          enum: [Archived,Draft,Submitted,Processed]
        subType:
          type: string
          enum: [cash,inkind_contribution,inkind_paid_supervision,inkind_forgiven_account,inkind_forgiven_personal,item_sold_fair_market,item_returned_check,item_misc,item_refund]
        oaeType:
          type: string
          enum: [seed,matchable,public_matching_contribution,qualifying,allowable,inkind]
        type:
          type: string
          enum: [contribution,other]
        date:
          type: integer
    Expenditure:
      type: object
      properties:
        id:
          type: integer
        governmentId:
          type: integer
        campaignId:
          type: integer
        address1:
          type: string
        address2:
          type: string
        amount:
          type: integer
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        name:
          type: string
        status:
          type: string
          enum: [Archived,Draft,Submitted,Processed]
        subType:
          type: string
          enum: [accounts_payable,cash_expenditure,personal_expenditure,accounts_payable_rescinded,cash_balance_adjustment,miscellaneous_other_disbursement,refund_of_expenditure]
        type:
          type: string
          enum: [expenditure,other,other_disbursement]
        date:
          type: integer
        vendorForOriginalPurchase:
          type: string
        dateOriginalTransaction:
          type: integer

  # Reusable path, query, header and cookie parameters
  parameters:

  # Security scheme definitions (see Authentication)
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

  requestBodies:
    LoginBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
    GetActivitiesBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              governmentId:
                type: integer
              campaignId:
                type: integer
              contributionId:
                type: interger
              expenditureId:
                type: interger
              perPage:
                type: integer
              page:
                type: integer
    GetUsersBody:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - type: object
                properties:
                  campaignId:
                    type: integer
              - type: object
                properties:
                  governmentId:
                    type: integer
    GetStatusSummaryBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              campaignId:
                type: integer
              governmentId:
                type: integer
    RedeemInviteBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              invitationCode:
                type: string
              password:
                type: string
                format: password
              firstName:
                type: string
              lastName:
                type: string
            required:
              - invitationCode
              - password
              - firstName
              - lastName
    AddCommentBody:
      required: true
      content:
        application/json:
          schema:
            type: onbject
            properties:
              comment: string
    PostMatchBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              contributionId:
                type: integer
              matchId:
                type: string
              matchStrength:
                type: string
                enum: [strong,exact,weak,none]
    UpdateContributionBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
              address1:
                type: string
              address2:
                type: string
              amount:
                type: integer
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              contributorType:
                type: string
                enum: [individual,business,family,labor,political_committee,political_party,unregistered,other]
              inKindType:
                type: string
                enum: [wages,broadcast_advertising,fundraising_event_expenses,general_operating_expenses,printing,management,print_advertising,other_advertising,petition_Circulators,postage,preparation_of_advertising,surveys_and_polls,travel_expenses,utilities]
              paymentMethod:
                type: string
                enum: [cash,check,money_order,credit_card_online,credit_card_paper]
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              middleInitial:
                type: string
              matchAmount:
                type: integer
              name:
                type: string
              prefix:
                type: string
              suffix:
                type: string
              title:
                type: string
              status:
                type: string
                enum: [Archived,Draft,Submitted,Processed]
              subType:
                type: string
                enum: [cash,inkind_contribution,inkind_paid_supervision,inkind_forgiven_account,inkind_forgiven_personal,item_sold_fair_market,item_returned_check,item_misc,item_refund]
              type:
                type: string
                enum: [contribution,other]
              date:
                type: integer
              notes:
                type: string
              oaeType:
                type: string
                enum: [seed,matchable,public_matching_contribution,qualifying,allowable,inkind]
            required:
              - id
    AddContributionBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              campaignId:
                type: integer
              governmentId:
                type: integer
              address1:
                type: string
              address2:
                type: string
              amount:
                type: integer
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              contributorType:
                type: string
                enum: [individual,business,family,labor,political_committee,political_party,unregistered,other]
              inKindType:
                type: string
                enum: [wages,broadcast_advertising,fundraising_event_expenses,general_operating_expenses,printing,management,print_advertising,other_advertising,petition_Circulators,postage,preparation_of_advertising,surveys_and_polls,travel_expenses,utilities]
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              middleInitial:
                type: string
              name:
                type: string
              prefix:
                type: string
              suffix:
                type: string
              title:
                type: string
              oaeType:
                type: string
                enum: [seed,matchable,public_matching_contribution,qualifying,allowable,inkind]
              subType:
                type: string
                enum: [cash,inkind_contribution,inkind_paid_supervision,inkind_forgiven_account,inkind_forgiven_personal,item_sold_fair_market,item_returned_check,item_misc,item_refund]
              type:
                type: string
                enum: [contribution,other]
              paymentMethod:
                type: string
                enum: [cash,check,money_order,credit_card_online,credit_card_paper]
              date:
                type: number
              notes:
                type: string
    GetContributionBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              governmentId:
                type: integer
              currentUserId:
                type: integer
              campaignId:
                type: integer
              matchId:
                type: integer
              perPage:
                type: integer
              page:
                type: integer
              status:
                type: string
              from:
                type: string
              to:
                type: string
              format:
                type: string
                enum: [json, csv, geoJson]
              sort:
                type: object
                properties:
                  field:
                    type: string
                    enum: [date,campaignId,status]
                  direction:
                    type: string
                    enum: ['ASC','DESC']
            required:
              - governmentId
    GetExpenditureBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              governmentId:
                type: integer
              currentUserId:
                type: integer
              campaignId:
                type: integer
              perPage:
                type: integer
              page:
                type: integer
              status:
                type: string
              from:
                type: string
              to:
                type: string
              sort:
                type: object
                properties:
                  field:
                    type: string
                    enum: [date,campaignId,status]
                  direction:
                    type: string
                    enum: [ASC,DESC]
            required:
              - governmentId
    GetContributionByIdBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              governmentId:
                type: integer
              currentUserId:
                type: integer
              campaignId:
                type: integer
            required:
              - id
    AddExpenditureBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              campaignId:
                type: integer
              governmentId:
                type: integer
              address1:
                type: string
              address2:
                type: string
              amount:
                type: integer
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              name:
                type: string
              status:
                type: string
                enum: [Archived,Draft,Submitted,Processed]
              subType:
                type: string
                enum: [accounts_payable,cash_expenditure,personal_expenditure,accounts_payable_rescinded,cash_balance_adjustment,miscellaneous_other_disbursement,refund_of_expenditure]
              type:
                type: string
                enum: [expenditure,other,other_disbursement]
              paymentMethod:
                type: string
                enum: [cash,check,money_order,credit_card_online,credit_card_paper]
              purpose:
                type: string
                enum: [wages,cash_contribution,personal_reimbursement,broadcast_advertising,fundraising_event_expenses,general_operating_expenses,printing,management,other_advertising,petition_circulators,postage,preparation_of_advertising,surveys_and_polls,travel_expenses,utilities]
              date:
                type: integer
              notes:
                type: string
              vendorForOriginalPurchase:
                type: string
              dateOriginalTransaction:
                type: integer
    UpdateExpenditureBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              address1:
                type: string
              address2:
                type: string
              amount:
                type: integer
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              name:
                type: string
              status:
                type: string
                enum: [Archived,Draft,Submitted,Processed]
              subType:
                type: string
                enum: [accounts_payable,cash_expenditure,personal_expenditure,accounts_payable_rescinded,cash_balance_adjustment,miscellaneous_other_disbursement,refund_of_expenditure]
              type:
                type: string
                enum: [expenditure,other,other_disbursement]
              paymentMethod:
                type: string
                enum: [cash,check,money_order,credit_card_online,credit_card_paper]
              purpose:
                type: string
                enum: [wages,cash_contribution,personal_reimbursement,broadcast_advertising,fundraising_event_expenses,general_operating_expenses,printing,management,other_advertising,petition_circulators,postage,preparation_of_advertising,surveys_and_polls,travel_expenses,utilities]
              date:
                type: integer
              notes:
                type: string
              vendorForOriginalPurchase:
                type: string
              dateOriginalTransaction:
                type: integer

  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: The server was unable to process the contained instructions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  # Reusable response headers
  headers:

  # Reusable examples
  examples:

  # Reusable links
  links:

  # Reusable callbacks
  callbacks:
